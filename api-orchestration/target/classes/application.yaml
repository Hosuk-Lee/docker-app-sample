
server:
  port: 8080
  error:
    include-stacktrace: never


spring.output.ansi.enabled: always

spring:
  # H2 Setting Info (H2 Console에 접속하기 위한 설정정보 입력)
  h2:
    console:
      enabled: true  # H2 Console을 사용할지 여부 (H2 Console은 H2 Database를 UI로 제공해주는 기능)
      path: /h2-console  # H2 Console의 Path
  # Database Setting Info (Database를 H2로 사용하기 위해 H2연결 정보 입력)
  datasource:
    driver-class-name: org.h2.Driver  # Database를 H2로 사용하겠다.
    url: jdbc:h2:~/test  # H2 접속 정보
    username: sa  # H2 접속 시 입력할 username 정보 (원하는 것으로 입력)
    password:  # H2 접속 시 입력할 password 정보 (원하는 것으로 입력)

error:
  printStackTrace: true

management:
  endpoints:
    web.base-path: /management # actuator 기본 경로 변경 (보안)
    web.exposure.include: "health,info,env,metrics"
  server:
    port: 8082 # http://localhost:8082/actuator (port 8080 -> 8082)
  endpoint:
    health:
      show-details: ALWAYS # http://localhost:8082/actuator/health 에서 "up" 상태코드 외 다른 상세정보 보여줌
    env:
      show-values: ALWAYS # http://localhost:8082/actuator/env 에서 값이 보이게 하는 설정
  info:
    os:
      enabled: true
    java:
      enabled: true
    env:
      enabled: true # 아래 info key 값의 데이터를 표시
info:
  my-app:
    any-value: someValue
    group-id: "@project.groupId@" # maven 의 properties 가져오는 문법


integration:
  account:
    url: http://localhost:19000
    token:
  product:
    url: http://localhost:9090
    token:

k.common:
  service:
    # 서비스로그 정책 (TODO)
    log.enabled: false
    log.type.kafka:
      enabled: false
      topic: "k.common.service.log.topic"
    log.type.db:
      enabled: false
      table_name: "TBKSVCLOG"
    log.type.elastic:
      enabled: false
      index_name: "asdf"
    # 타팀아웃 정책 (TODO)
    timeout:
      enabled: false
      ttl: 60 # sec

  x-header:
    base64:
      encoded:
        request: false
        response: false
    file:
      enabled: false
      name: x-k-header-sample.json
