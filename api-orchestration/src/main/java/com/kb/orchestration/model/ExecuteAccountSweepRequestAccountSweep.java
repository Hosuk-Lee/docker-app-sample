/*
 * Savings Account
 * This service domain orchestrates a consumer savings account. The typical range of services and fees covers payments from and scheduled and ad-hoc deposits to the account, standing orders, sweeps, and liens.
 *
 * OpenAPI spec version: 11.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.kb.orchestration.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.kb.orchestration.model.Amount;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.LocalDate;
import java.util.Objects;
//import org.threeten.bp.LocalDate;
/**
 * ExecuteAccountSweepRequestAccountSweep
 */

@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-10-20T14:18:15.269223656Z[GMT]")

public class ExecuteAccountSweepRequestAccountSweep {
  @JsonProperty("SweepApplicationRecord")
  private String sweepApplicationRecord = null;

  @JsonProperty("AccountSweepTargetAccount")
  private String accountSweepTargetAccount = null;

  @JsonProperty("AccountSweepAmount")
  private Amount accountSweepAmount = null;

  @JsonProperty("AccountSweepExecutionDate")
  private LocalDate accountSweepExecutionDate = null;

  public ExecuteAccountSweepRequestAccountSweep sweepApplicationRecord(String sweepApplicationRecord) {
    this.sweepApplicationRecord = sweepApplicationRecord;
    return this;
  }

   /**
   *  
   * @return sweepApplicationRecord
  **/
  @Schema(description = " ")
  public String getSweepApplicationRecord() {
    return sweepApplicationRecord;
  }

  public void setSweepApplicationRecord(String sweepApplicationRecord) {
    this.sweepApplicationRecord = sweepApplicationRecord;
  }

  public ExecuteAccountSweepRequestAccountSweep accountSweepTargetAccount(String accountSweepTargetAccount) {
    this.accountSweepTargetAccount = accountSweepTargetAccount;
    return this;
  }

   /**
   *  
   * @return accountSweepTargetAccount
  **/
  @Schema(description = " ")
  public String getAccountSweepTargetAccount() {
    return accountSweepTargetAccount;
  }

  public void setAccountSweepTargetAccount(String accountSweepTargetAccount) {
    this.accountSweepTargetAccount = accountSweepTargetAccount;
  }

  public ExecuteAccountSweepRequestAccountSweep accountSweepAmount(Amount accountSweepAmount) {
    this.accountSweepAmount = accountSweepAmount;
    return this;
  }

   /**
   * Get accountSweepAmount
   * @return accountSweepAmount
  **/
  @Schema(description = "")
  public Amount getAccountSweepAmount() {
    return accountSweepAmount;
  }

  public void setAccountSweepAmount(Amount accountSweepAmount) {
    this.accountSweepAmount = accountSweepAmount;
  }

  public ExecuteAccountSweepRequestAccountSweep accountSweepExecutionDate(LocalDate accountSweepExecutionDate) {
    this.accountSweepExecutionDate = accountSweepExecutionDate;
    return this;
  }

   /**
   * Get accountSweepExecutionDate
   * @return accountSweepExecutionDate
  **/
  @Schema(description = "")
  public LocalDate getAccountSweepExecutionDate() {
    return accountSweepExecutionDate;
  }

  public void setAccountSweepExecutionDate(LocalDate accountSweepExecutionDate) {
    this.accountSweepExecutionDate = accountSweepExecutionDate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExecuteAccountSweepRequestAccountSweep executeAccountSweepRequestAccountSweep = (ExecuteAccountSweepRequestAccountSweep) o;
    return Objects.equals(this.sweepApplicationRecord, executeAccountSweepRequestAccountSweep.sweepApplicationRecord) &&
        Objects.equals(this.accountSweepTargetAccount, executeAccountSweepRequestAccountSweep.accountSweepTargetAccount) &&
        Objects.equals(this.accountSweepAmount, executeAccountSweepRequestAccountSweep.accountSweepAmount) &&
        Objects.equals(this.accountSweepExecutionDate, executeAccountSweepRequestAccountSweep.accountSweepExecutionDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sweepApplicationRecord, accountSweepTargetAccount, accountSweepAmount, accountSweepExecutionDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExecuteAccountSweepRequestAccountSweep {\n");
    
    sb.append("    sweepApplicationRecord: ").append(toIndentedString(sweepApplicationRecord)).append("\n");
    sb.append("    accountSweepTargetAccount: ").append(toIndentedString(accountSweepTargetAccount)).append("\n");
    sb.append("    accountSweepAmount: ").append(toIndentedString(accountSweepAmount)).append("\n");
    sb.append("    accountSweepExecutionDate: ").append(toIndentedString(accountSweepExecutionDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
