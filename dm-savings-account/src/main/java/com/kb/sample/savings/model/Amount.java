/*
 * Savings Account
 * This service domain orchestrates a consumer savings account. The typical range of services and fees covers payments from and scheduled and ad-hoc deposits to the account, standing orders, sweeps, and liens.
 *
 * OpenAPI spec version: 11.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.kb.sample.savings.model;
import com.fasterxml.jackson.annotation.JsonProperty;

import java.util.Objects;


import io.swagger.v3.oas.annotations.media.Schema;

/**
 * The amount transferred to or from the account
 */
@Schema(description = "The amount transferred to or from the account")
@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-10-20T14:18:15.269223656Z[GMT]")

public class Amount {
  @JsonProperty("AmountValue")
  private String amountValue = null;

  @JsonProperty("AmountCurrency")
  private Currencycode amountCurrency = null;

  @JsonProperty("DecimalPointPosition")
  private String decimalPointPosition = null;

  public Amount amountValue(String amountValue) {
    this.amountValue = amountValue;
    return this;
  }

   /**
   * Get amountValue
   * @return amountValue
  **/
  @Schema(description = "")
  public String getAmountValue() {
    return amountValue;
  }

  public void setAmountValue(String amountValue) {
    this.amountValue = amountValue;
  }

  public Amount amountCurrency(Currencycode amountCurrency) {
    this.amountCurrency = amountCurrency;
    return this;
  }

   /**
   * Get amountCurrency
   * @return amountCurrency
  **/
  @Schema(description = "")
  public Currencycode getAmountCurrency() {
    return amountCurrency;
  }

  public void setAmountCurrency(Currencycode amountCurrency) {
    this.amountCurrency = amountCurrency;
  }

  public Amount decimalPointPosition(String decimalPointPosition) {
    this.decimalPointPosition = decimalPointPosition;
    return this;
  }

   /**
   * Decimal point position starts calulating from the right 
   * @return decimalPointPosition
  **/
  @Schema(description = "Decimal point position starts calulating from the right ")
  public String getDecimalPointPosition() {
    return decimalPointPosition;
  }

  public void setDecimalPointPosition(String decimalPointPosition) {
    this.decimalPointPosition = decimalPointPosition;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Amount amount = (Amount) o;
    return Objects.equals(this.amountValue, amount.amountValue) &&
        Objects.equals(this.amountCurrency, amount.amountCurrency) &&
        Objects.equals(this.decimalPointPosition, amount.decimalPointPosition);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amountValue, amountCurrency, decimalPointPosition);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Amount {\n");
    
    sb.append("    amountValue: ").append(toIndentedString(amountValue)).append("\n");
    sb.append("    amountCurrency: ").append(toIndentedString(amountCurrency)).append("\n");
    sb.append("    decimalPointPosition: ").append(toIndentedString(decimalPointPosition)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
