/*
 * Savings Account
 * This service domain orchestrates a consumer savings account. The typical range of services and fees covers payments from and scheduled and ad-hoc deposits to the account, standing orders, sweeps, and liens.
 *
 * OpenAPI spec version: 11.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package hs.sample.k.apiserver.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;
import java.util.Objects;
import java.util.Arrays;






import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
//import org.threeten.bp.LocalDate;
/**
 * UpdatePaymentsRequestPayments
 */

@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-10-20T14:18:15.269223656Z[GMT]")

public class UpdatePaymentsRequestPayments {
  @JsonProperty("PaymentType")
  private String paymentType = null;

  @JsonProperty("PaymentProcessingOptionDefinition")
  private String paymentProcessingOptionDefinition = null;

  @JsonProperty("PaymentProcessingOptionSetting")
  private String paymentProcessingOptionSetting = null;

  @JsonProperty("PaymentConfiguration")
  private String paymentConfiguration = null;

  @JsonProperty("PaymentSchedule")
  private String paymentSchedule = null;

  @JsonProperty("DirectDebitMandateReference")
  private String directDebitMandateReference = null;

  @JsonProperty("DirectDebitMandateSettings")
  private String directDebitMandateSettings = null;

  @JsonProperty("BillPayMandateReference")
  private String billPayMandateReference = null;

  @JsonProperty("BillPayMandateSettings")
  private String billPayMandateSettings = null;

  @JsonProperty("PaymentTransaction")
  private String paymentTransaction = null;

  @JsonProperty("PaymentTransactionType")
  private String paymentTransactionType = null;

  @JsonProperty("PaymentTransactionPayeeReference")
  private String paymentTransactionPayeeReference = null;

  @JsonProperty("PaymentTransactionPayeeAccountReference")
  private String paymentTransactionPayeeAccountReference = null;

  @JsonProperty("PaymentTransactionPayeeBankReference")
  private String paymentTransactionPayeeBankReference = null;

  @JsonProperty("PaymentTransactionAmount")
  private Amount paymentTransactionAmount = null;

  @JsonProperty("PaymentTransactionFeeType")
  private String paymentTransactionFeeType = null;

  @JsonProperty("PaymentTransactionFeeCharge")
  private String paymentTransactionFeeCharge = null;

  @JsonProperty("PaymentTransactionDate")
  private LocalDate paymentTransactionDate = null;

  @JsonProperty("PaymentTransactionPaymentMechanism")
  private String paymentTransactionPaymentMechanism = null;

  @JsonProperty("PaymentTransactionPaymentPurpose")
  private String paymentTransactionPaymentPurpose = null;

  @JsonProperty("PaymentTransactionBankBranchLocationReference")
  private String paymentTransactionBankBranchLocationReference = null;

  public UpdatePaymentsRequestPayments paymentType(String paymentType) {
    this.paymentType = paymentType;
    return this;
  }

   /**
   *  
   * @return paymentType
  **/
  @Schema(description = " ")
  public String getPaymentType() {
    return paymentType;
  }

  public void setPaymentType(String paymentType) {
    this.paymentType = paymentType;
  }

  public UpdatePaymentsRequestPayments paymentProcessingOptionDefinition(String paymentProcessingOptionDefinition) {
    this.paymentProcessingOptionDefinition = paymentProcessingOptionDefinition;
    return this;
  }

   /**
   *  
   * @return paymentProcessingOptionDefinition
  **/
  @Schema(description = " ")
  public String getPaymentProcessingOptionDefinition() {
    return paymentProcessingOptionDefinition;
  }

  public void setPaymentProcessingOptionDefinition(String paymentProcessingOptionDefinition) {
    this.paymentProcessingOptionDefinition = paymentProcessingOptionDefinition;
  }

  public UpdatePaymentsRequestPayments paymentProcessingOptionSetting(String paymentProcessingOptionSetting) {
    this.paymentProcessingOptionSetting = paymentProcessingOptionSetting;
    return this;
  }

   /**
   *  
   * @return paymentProcessingOptionSetting
  **/
  @Schema(description = " ")
  public String getPaymentProcessingOptionSetting() {
    return paymentProcessingOptionSetting;
  }

  public void setPaymentProcessingOptionSetting(String paymentProcessingOptionSetting) {
    this.paymentProcessingOptionSetting = paymentProcessingOptionSetting;
  }

  public UpdatePaymentsRequestPayments paymentConfiguration(String paymentConfiguration) {
    this.paymentConfiguration = paymentConfiguration;
    return this;
  }

   /**
   *  
   * @return paymentConfiguration
  **/
  @Schema(description = " ")
  public String getPaymentConfiguration() {
    return paymentConfiguration;
  }

  public void setPaymentConfiguration(String paymentConfiguration) {
    this.paymentConfiguration = paymentConfiguration;
  }

  public UpdatePaymentsRequestPayments paymentSchedule(String paymentSchedule) {
    this.paymentSchedule = paymentSchedule;
    return this;
  }

   /**
   *  
   * @return paymentSchedule
  **/
  @Schema(description = " ")
  public String getPaymentSchedule() {
    return paymentSchedule;
  }

  public void setPaymentSchedule(String paymentSchedule) {
    this.paymentSchedule = paymentSchedule;
  }

  public UpdatePaymentsRequestPayments directDebitMandateReference(String directDebitMandateReference) {
    this.directDebitMandateReference = directDebitMandateReference;
    return this;
  }

   /**
   *  
   * @return directDebitMandateReference
  **/
  @Schema(description = " ")
  public String getDirectDebitMandateReference() {
    return directDebitMandateReference;
  }

  public void setDirectDebitMandateReference(String directDebitMandateReference) {
    this.directDebitMandateReference = directDebitMandateReference;
  }

  public UpdatePaymentsRequestPayments directDebitMandateSettings(String directDebitMandateSettings) {
    this.directDebitMandateSettings = directDebitMandateSettings;
    return this;
  }

   /**
   *  
   * @return directDebitMandateSettings
  **/
  @Schema(description = " ")
  public String getDirectDebitMandateSettings() {
    return directDebitMandateSettings;
  }

  public void setDirectDebitMandateSettings(String directDebitMandateSettings) {
    this.directDebitMandateSettings = directDebitMandateSettings;
  }

  public UpdatePaymentsRequestPayments billPayMandateReference(String billPayMandateReference) {
    this.billPayMandateReference = billPayMandateReference;
    return this;
  }

   /**
   *  
   * @return billPayMandateReference
  **/
  @Schema(description = " ")
  public String getBillPayMandateReference() {
    return billPayMandateReference;
  }

  public void setBillPayMandateReference(String billPayMandateReference) {
    this.billPayMandateReference = billPayMandateReference;
  }

  public UpdatePaymentsRequestPayments billPayMandateSettings(String billPayMandateSettings) {
    this.billPayMandateSettings = billPayMandateSettings;
    return this;
  }

   /**
   *  
   * @return billPayMandateSettings
  **/
  @Schema(description = " ")
  public String getBillPayMandateSettings() {
    return billPayMandateSettings;
  }

  public void setBillPayMandateSettings(String billPayMandateSettings) {
    this.billPayMandateSettings = billPayMandateSettings;
  }

  public UpdatePaymentsRequestPayments paymentTransaction(String paymentTransaction) {
    this.paymentTransaction = paymentTransaction;
    return this;
  }

   /**
   *  
   * @return paymentTransaction
  **/
  @Schema(description = " ")
  public String getPaymentTransaction() {
    return paymentTransaction;
  }

  public void setPaymentTransaction(String paymentTransaction) {
    this.paymentTransaction = paymentTransaction;
  }

  public UpdatePaymentsRequestPayments paymentTransactionType(String paymentTransactionType) {
    this.paymentTransactionType = paymentTransactionType;
    return this;
  }

   /**
   *  
   * @return paymentTransactionType
  **/
  @Schema(description = " ")
  public String getPaymentTransactionType() {
    return paymentTransactionType;
  }

  public void setPaymentTransactionType(String paymentTransactionType) {
    this.paymentTransactionType = paymentTransactionType;
  }

  public UpdatePaymentsRequestPayments paymentTransactionPayeeReference(String paymentTransactionPayeeReference) {
    this.paymentTransactionPayeeReference = paymentTransactionPayeeReference;
    return this;
  }

   /**
   *  
   * @return paymentTransactionPayeeReference
  **/
  @Schema(description = " ")
  public String getPaymentTransactionPayeeReference() {
    return paymentTransactionPayeeReference;
  }

  public void setPaymentTransactionPayeeReference(String paymentTransactionPayeeReference) {
    this.paymentTransactionPayeeReference = paymentTransactionPayeeReference;
  }

  public UpdatePaymentsRequestPayments paymentTransactionPayeeAccountReference(String paymentTransactionPayeeAccountReference) {
    this.paymentTransactionPayeeAccountReference = paymentTransactionPayeeAccountReference;
    return this;
  }

   /**
   *  
   * @return paymentTransactionPayeeAccountReference
  **/
  @Schema(description = " ")
  public String getPaymentTransactionPayeeAccountReference() {
    return paymentTransactionPayeeAccountReference;
  }

  public void setPaymentTransactionPayeeAccountReference(String paymentTransactionPayeeAccountReference) {
    this.paymentTransactionPayeeAccountReference = paymentTransactionPayeeAccountReference;
  }

  public UpdatePaymentsRequestPayments paymentTransactionPayeeBankReference(String paymentTransactionPayeeBankReference) {
    this.paymentTransactionPayeeBankReference = paymentTransactionPayeeBankReference;
    return this;
  }

   /**
   *  
   * @return paymentTransactionPayeeBankReference
  **/
  @Schema(description = " ")
  public String getPaymentTransactionPayeeBankReference() {
    return paymentTransactionPayeeBankReference;
  }

  public void setPaymentTransactionPayeeBankReference(String paymentTransactionPayeeBankReference) {
    this.paymentTransactionPayeeBankReference = paymentTransactionPayeeBankReference;
  }

  public UpdatePaymentsRequestPayments paymentTransactionAmount(Amount paymentTransactionAmount) {
    this.paymentTransactionAmount = paymentTransactionAmount;
    return this;
  }

   /**
   * Get paymentTransactionAmount
   * @return paymentTransactionAmount
  **/
  @Schema(description = "")
  public Amount getPaymentTransactionAmount() {
    return paymentTransactionAmount;
  }

  public void setPaymentTransactionAmount(Amount paymentTransactionAmount) {
    this.paymentTransactionAmount = paymentTransactionAmount;
  }

  public UpdatePaymentsRequestPayments paymentTransactionFeeType(String paymentTransactionFeeType) {
    this.paymentTransactionFeeType = paymentTransactionFeeType;
    return this;
  }

   /**
   *  
   * @return paymentTransactionFeeType
  **/
  @Schema(description = " ")
  public String getPaymentTransactionFeeType() {
    return paymentTransactionFeeType;
  }

  public void setPaymentTransactionFeeType(String paymentTransactionFeeType) {
    this.paymentTransactionFeeType = paymentTransactionFeeType;
  }

  public UpdatePaymentsRequestPayments paymentTransactionFeeCharge(String paymentTransactionFeeCharge) {
    this.paymentTransactionFeeCharge = paymentTransactionFeeCharge;
    return this;
  }

   /**
   *  
   * @return paymentTransactionFeeCharge
  **/
  @Schema(description = " ")
  public String getPaymentTransactionFeeCharge() {
    return paymentTransactionFeeCharge;
  }

  public void setPaymentTransactionFeeCharge(String paymentTransactionFeeCharge) {
    this.paymentTransactionFeeCharge = paymentTransactionFeeCharge;
  }

  public UpdatePaymentsRequestPayments paymentTransactionDate(LocalDate paymentTransactionDate) {
    this.paymentTransactionDate = paymentTransactionDate;
    return this;
  }

   /**
   * Get paymentTransactionDate
   * @return paymentTransactionDate
  **/
  @Schema(description = "")
  public LocalDate getPaymentTransactionDate() {
    return paymentTransactionDate;
  }

  public void setPaymentTransactionDate(LocalDate paymentTransactionDate) {
    this.paymentTransactionDate = paymentTransactionDate;
  }

  public UpdatePaymentsRequestPayments paymentTransactionPaymentMechanism(String paymentTransactionPaymentMechanism) {
    this.paymentTransactionPaymentMechanism = paymentTransactionPaymentMechanism;
    return this;
  }

   /**
   *  
   * @return paymentTransactionPaymentMechanism
  **/
  @Schema(description = " ")
  public String getPaymentTransactionPaymentMechanism() {
    return paymentTransactionPaymentMechanism;
  }

  public void setPaymentTransactionPaymentMechanism(String paymentTransactionPaymentMechanism) {
    this.paymentTransactionPaymentMechanism = paymentTransactionPaymentMechanism;
  }

  public UpdatePaymentsRequestPayments paymentTransactionPaymentPurpose(String paymentTransactionPaymentPurpose) {
    this.paymentTransactionPaymentPurpose = paymentTransactionPaymentPurpose;
    return this;
  }

   /**
   *  
   * @return paymentTransactionPaymentPurpose
  **/
  @Schema(description = " ")
  public String getPaymentTransactionPaymentPurpose() {
    return paymentTransactionPaymentPurpose;
  }

  public void setPaymentTransactionPaymentPurpose(String paymentTransactionPaymentPurpose) {
    this.paymentTransactionPaymentPurpose = paymentTransactionPaymentPurpose;
  }

  public UpdatePaymentsRequestPayments paymentTransactionBankBranchLocationReference(String paymentTransactionBankBranchLocationReference) {
    this.paymentTransactionBankBranchLocationReference = paymentTransactionBankBranchLocationReference;
    return this;
  }

   /**
   *  
   * @return paymentTransactionBankBranchLocationReference
  **/
  @Schema(description = " ")
  public String getPaymentTransactionBankBranchLocationReference() {
    return paymentTransactionBankBranchLocationReference;
  }

  public void setPaymentTransactionBankBranchLocationReference(String paymentTransactionBankBranchLocationReference) {
    this.paymentTransactionBankBranchLocationReference = paymentTransactionBankBranchLocationReference;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdatePaymentsRequestPayments updatePaymentsRequestPayments = (UpdatePaymentsRequestPayments) o;
    return Objects.equals(this.paymentType, updatePaymentsRequestPayments.paymentType) &&
        Objects.equals(this.paymentProcessingOptionDefinition, updatePaymentsRequestPayments.paymentProcessingOptionDefinition) &&
        Objects.equals(this.paymentProcessingOptionSetting, updatePaymentsRequestPayments.paymentProcessingOptionSetting) &&
        Objects.equals(this.paymentConfiguration, updatePaymentsRequestPayments.paymentConfiguration) &&
        Objects.equals(this.paymentSchedule, updatePaymentsRequestPayments.paymentSchedule) &&
        Objects.equals(this.directDebitMandateReference, updatePaymentsRequestPayments.directDebitMandateReference) &&
        Objects.equals(this.directDebitMandateSettings, updatePaymentsRequestPayments.directDebitMandateSettings) &&
        Objects.equals(this.billPayMandateReference, updatePaymentsRequestPayments.billPayMandateReference) &&
        Objects.equals(this.billPayMandateSettings, updatePaymentsRequestPayments.billPayMandateSettings) &&
        Objects.equals(this.paymentTransaction, updatePaymentsRequestPayments.paymentTransaction) &&
        Objects.equals(this.paymentTransactionType, updatePaymentsRequestPayments.paymentTransactionType) &&
        Objects.equals(this.paymentTransactionPayeeReference, updatePaymentsRequestPayments.paymentTransactionPayeeReference) &&
        Objects.equals(this.paymentTransactionPayeeAccountReference, updatePaymentsRequestPayments.paymentTransactionPayeeAccountReference) &&
        Objects.equals(this.paymentTransactionPayeeBankReference, updatePaymentsRequestPayments.paymentTransactionPayeeBankReference) &&
        Objects.equals(this.paymentTransactionAmount, updatePaymentsRequestPayments.paymentTransactionAmount) &&
        Objects.equals(this.paymentTransactionFeeType, updatePaymentsRequestPayments.paymentTransactionFeeType) &&
        Objects.equals(this.paymentTransactionFeeCharge, updatePaymentsRequestPayments.paymentTransactionFeeCharge) &&
        Objects.equals(this.paymentTransactionDate, updatePaymentsRequestPayments.paymentTransactionDate) &&
        Objects.equals(this.paymentTransactionPaymentMechanism, updatePaymentsRequestPayments.paymentTransactionPaymentMechanism) &&
        Objects.equals(this.paymentTransactionPaymentPurpose, updatePaymentsRequestPayments.paymentTransactionPaymentPurpose) &&
        Objects.equals(this.paymentTransactionBankBranchLocationReference, updatePaymentsRequestPayments.paymentTransactionBankBranchLocationReference);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paymentType, paymentProcessingOptionDefinition, paymentProcessingOptionSetting, paymentConfiguration, paymentSchedule, directDebitMandateReference, directDebitMandateSettings, billPayMandateReference, billPayMandateSettings, paymentTransaction, paymentTransactionType, paymentTransactionPayeeReference, paymentTransactionPayeeAccountReference, paymentTransactionPayeeBankReference, paymentTransactionAmount, paymentTransactionFeeType, paymentTransactionFeeCharge, paymentTransactionDate, paymentTransactionPaymentMechanism, paymentTransactionPaymentPurpose, paymentTransactionBankBranchLocationReference);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdatePaymentsRequestPayments {\n");
    
    sb.append("    paymentType: ").append(toIndentedString(paymentType)).append("\n");
    sb.append("    paymentProcessingOptionDefinition: ").append(toIndentedString(paymentProcessingOptionDefinition)).append("\n");
    sb.append("    paymentProcessingOptionSetting: ").append(toIndentedString(paymentProcessingOptionSetting)).append("\n");
    sb.append("    paymentConfiguration: ").append(toIndentedString(paymentConfiguration)).append("\n");
    sb.append("    paymentSchedule: ").append(toIndentedString(paymentSchedule)).append("\n");
    sb.append("    directDebitMandateReference: ").append(toIndentedString(directDebitMandateReference)).append("\n");
    sb.append("    directDebitMandateSettings: ").append(toIndentedString(directDebitMandateSettings)).append("\n");
    sb.append("    billPayMandateReference: ").append(toIndentedString(billPayMandateReference)).append("\n");
    sb.append("    billPayMandateSettings: ").append(toIndentedString(billPayMandateSettings)).append("\n");
    sb.append("    paymentTransaction: ").append(toIndentedString(paymentTransaction)).append("\n");
    sb.append("    paymentTransactionType: ").append(toIndentedString(paymentTransactionType)).append("\n");
    sb.append("    paymentTransactionPayeeReference: ").append(toIndentedString(paymentTransactionPayeeReference)).append("\n");
    sb.append("    paymentTransactionPayeeAccountReference: ").append(toIndentedString(paymentTransactionPayeeAccountReference)).append("\n");
    sb.append("    paymentTransactionPayeeBankReference: ").append(toIndentedString(paymentTransactionPayeeBankReference)).append("\n");
    sb.append("    paymentTransactionAmount: ").append(toIndentedString(paymentTransactionAmount)).append("\n");
    sb.append("    paymentTransactionFeeType: ").append(toIndentedString(paymentTransactionFeeType)).append("\n");
    sb.append("    paymentTransactionFeeCharge: ").append(toIndentedString(paymentTransactionFeeCharge)).append("\n");
    sb.append("    paymentTransactionDate: ").append(toIndentedString(paymentTransactionDate)).append("\n");
    sb.append("    paymentTransactionPaymentMechanism: ").append(toIndentedString(paymentTransactionPaymentMechanism)).append("\n");
    sb.append("    paymentTransactionPaymentPurpose: ").append(toIndentedString(paymentTransactionPaymentPurpose)).append("\n");
    sb.append("    paymentTransactionBankBranchLocationReference: ").append(toIndentedString(paymentTransactionBankBranchLocationReference)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
