/*
 * Savings Account
 * This service domain orchestrates a consumer savings account. The typical range of services and fees covers payments from and scheduled and ad-hoc deposits to the account, standing orders, sweeps, and liens.
 *
 * OpenAPI spec version: 11.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package hs.sample.k.savings.model;
import com.fasterxml.jackson.annotation.JsonProperty;

import java.util.Objects;


import io.swagger.v3.oas.annotations.media.Schema;

/**
 * InitiatePaymentsRequestPayments
 */

@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-10-20T14:18:15.269223656Z[GMT]")

public class InitiatePaymentsRequestPayments {
  @JsonProperty("PaymentType")
  private String paymentType = null;

  @JsonProperty("PaymentDefinition")
  private String paymentDefinition = null;

  @JsonProperty("PaymentProcessingOptionSetting")
  private String paymentProcessingOptionSetting = null;

  @JsonProperty("PaymentConfiguration")
  private String paymentConfiguration = null;

  @JsonProperty("PaymentSchedule")
  private String paymentSchedule = null;

  @JsonProperty("DirectDebitMandateReference")
  private String directDebitMandateReference = null;

  @JsonProperty("DirectDebitMandateSettings")
  private String directDebitMandateSettings = null;

  @JsonProperty("BillPayMandateReference")
  private String billPayMandateReference = null;

  @JsonProperty("BillPayMandateSettings")
  private String billPayMandateSettings = null;

  public InitiatePaymentsRequestPayments paymentType(String paymentType) {
    this.paymentType = paymentType;
    return this;
  }

   /**
   *  
   * @return paymentType
  **/
  @Schema(description = " ")
  public String getPaymentType() {
    return paymentType;
  }

  public void setPaymentType(String paymentType) {
    this.paymentType = paymentType;
  }

  public InitiatePaymentsRequestPayments paymentDefinition(String paymentDefinition) {
    this.paymentDefinition = paymentDefinition;
    return this;
  }

   /**
   *  
   * @return paymentDefinition
  **/
  @Schema(description = " ")
  public String getPaymentDefinition() {
    return paymentDefinition;
  }

  public void setPaymentDefinition(String paymentDefinition) {
    this.paymentDefinition = paymentDefinition;
  }

  public InitiatePaymentsRequestPayments paymentProcessingOptionSetting(String paymentProcessingOptionSetting) {
    this.paymentProcessingOptionSetting = paymentProcessingOptionSetting;
    return this;
  }

   /**
   *  
   * @return paymentProcessingOptionSetting
  **/
  @Schema(description = " ")
  public String getPaymentProcessingOptionSetting() {
    return paymentProcessingOptionSetting;
  }

  public void setPaymentProcessingOptionSetting(String paymentProcessingOptionSetting) {
    this.paymentProcessingOptionSetting = paymentProcessingOptionSetting;
  }

  public InitiatePaymentsRequestPayments paymentConfiguration(String paymentConfiguration) {
    this.paymentConfiguration = paymentConfiguration;
    return this;
  }

   /**
   *  
   * @return paymentConfiguration
  **/
  @Schema(description = " ")
  public String getPaymentConfiguration() {
    return paymentConfiguration;
  }

  public void setPaymentConfiguration(String paymentConfiguration) {
    this.paymentConfiguration = paymentConfiguration;
  }

  public InitiatePaymentsRequestPayments paymentSchedule(String paymentSchedule) {
    this.paymentSchedule = paymentSchedule;
    return this;
  }

   /**
   *  
   * @return paymentSchedule
  **/
  @Schema(description = " ")
  public String getPaymentSchedule() {
    return paymentSchedule;
  }

  public void setPaymentSchedule(String paymentSchedule) {
    this.paymentSchedule = paymentSchedule;
  }

  public InitiatePaymentsRequestPayments directDebitMandateReference(String directDebitMandateReference) {
    this.directDebitMandateReference = directDebitMandateReference;
    return this;
  }

   /**
   *  
   * @return directDebitMandateReference
  **/
  @Schema(description = " ")
  public String getDirectDebitMandateReference() {
    return directDebitMandateReference;
  }

  public void setDirectDebitMandateReference(String directDebitMandateReference) {
    this.directDebitMandateReference = directDebitMandateReference;
  }

  public InitiatePaymentsRequestPayments directDebitMandateSettings(String directDebitMandateSettings) {
    this.directDebitMandateSettings = directDebitMandateSettings;
    return this;
  }

   /**
   *  
   * @return directDebitMandateSettings
  **/
  @Schema(description = " ")
  public String getDirectDebitMandateSettings() {
    return directDebitMandateSettings;
  }

  public void setDirectDebitMandateSettings(String directDebitMandateSettings) {
    this.directDebitMandateSettings = directDebitMandateSettings;
  }

  public InitiatePaymentsRequestPayments billPayMandateReference(String billPayMandateReference) {
    this.billPayMandateReference = billPayMandateReference;
    return this;
  }

   /**
   *  
   * @return billPayMandateReference
  **/
  @Schema(description = " ")
  public String getBillPayMandateReference() {
    return billPayMandateReference;
  }

  public void setBillPayMandateReference(String billPayMandateReference) {
    this.billPayMandateReference = billPayMandateReference;
  }

  public InitiatePaymentsRequestPayments billPayMandateSettings(String billPayMandateSettings) {
    this.billPayMandateSettings = billPayMandateSettings;
    return this;
  }

   /**
   *  
   * @return billPayMandateSettings
  **/
  @Schema(description = " ")
  public String getBillPayMandateSettings() {
    return billPayMandateSettings;
  }

  public void setBillPayMandateSettings(String billPayMandateSettings) {
    this.billPayMandateSettings = billPayMandateSettings;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InitiatePaymentsRequestPayments initiatePaymentsRequestPayments = (InitiatePaymentsRequestPayments) o;
    return Objects.equals(this.paymentType, initiatePaymentsRequestPayments.paymentType) &&
        Objects.equals(this.paymentDefinition, initiatePaymentsRequestPayments.paymentDefinition) &&
        Objects.equals(this.paymentProcessingOptionSetting, initiatePaymentsRequestPayments.paymentProcessingOptionSetting) &&
        Objects.equals(this.paymentConfiguration, initiatePaymentsRequestPayments.paymentConfiguration) &&
        Objects.equals(this.paymentSchedule, initiatePaymentsRequestPayments.paymentSchedule) &&
        Objects.equals(this.directDebitMandateReference, initiatePaymentsRequestPayments.directDebitMandateReference) &&
        Objects.equals(this.directDebitMandateSettings, initiatePaymentsRequestPayments.directDebitMandateSettings) &&
        Objects.equals(this.billPayMandateReference, initiatePaymentsRequestPayments.billPayMandateReference) &&
        Objects.equals(this.billPayMandateSettings, initiatePaymentsRequestPayments.billPayMandateSettings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paymentType, paymentDefinition, paymentProcessingOptionSetting, paymentConfiguration, paymentSchedule, directDebitMandateReference, directDebitMandateSettings, billPayMandateReference, billPayMandateSettings);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InitiatePaymentsRequestPayments {\n");
    
    sb.append("    paymentType: ").append(toIndentedString(paymentType)).append("\n");
    sb.append("    paymentDefinition: ").append(toIndentedString(paymentDefinition)).append("\n");
    sb.append("    paymentProcessingOptionSetting: ").append(toIndentedString(paymentProcessingOptionSetting)).append("\n");
    sb.append("    paymentConfiguration: ").append(toIndentedString(paymentConfiguration)).append("\n");
    sb.append("    paymentSchedule: ").append(toIndentedString(paymentSchedule)).append("\n");
    sb.append("    directDebitMandateReference: ").append(toIndentedString(directDebitMandateReference)).append("\n");
    sb.append("    directDebitMandateSettings: ").append(toIndentedString(directDebitMandateSettings)).append("\n");
    sb.append("    billPayMandateReference: ").append(toIndentedString(billPayMandateReference)).append("\n");
    sb.append("    billPayMandateSettings: ").append(toIndentedString(billPayMandateSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
